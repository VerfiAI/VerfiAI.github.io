openapi: 3.1.0
info:
  title: VerifAI API
  description: AI Verification System
  version: 1.0.0

servers:
  - url: http://localhost:3002
    description: Local development server

tags:
  - name: Users
    description: User management endpoints
  - name: Papers
    description: Paper analysis and management
  - name: Citations
    description: Citation generation and management
  - name: Chat
    description: AI chat interactions
  - name: Auth
    description: Authentication endpoints

paths:
  /api/users/{uid}:
    get:
      tags: [Users]
      summary: Get user details
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags: [Users]
      summary: Update user details
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags: [Users]
      summary: Delete user account
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/create-user:
    post:
      tags: [Users]
      summary: Create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  uid:
                    type: string
        "400":
          description: Error creating user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/papers/{doi}:
    get:
      tags: [Papers]
      summary: Get paper details
      parameters:
        - name: doi
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Paper details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaperInfo"
        "404":
          description: Paper not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags: [Papers]
      summary: Update paper details
      parameters:
        - name: doi
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                authors:
                  type: array
                  items:
                    type: string
                year:
                  type: string
      responses:
        "200":
          description: Paper updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "404":
          description: Paper not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags: [Papers]
      summary: Delete paper record
      parameters:
        - name: doi
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Paper deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/analyze-paper:
    post:
      tags: [Papers]
      summary: Analyze paper using DOI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                doi:
                  type: string
      responses:
        "200":
          description: Paper analysis results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaperInfo"
        "500":
          description: Error analyzing paper
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/generate-citation:
    post:
      tags: [Citations]
      summary: Generate citation for paper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paperTitle:
                  type: string
                authors:
                  type: string
                year:
                  type: string
      responses:
        "200":
          description: Citation generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  citation:
                    type: string
        "500":
          description: Error generating citation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/isbn-citation:
    post:
      tags: [Citations]
      summary: Get citation from ISBN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isbn:
                  type: string
      responses:
        "200":
          description: ISBN citation results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookInfo"
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/chat:
    post:
      tags: [Chat]
      summary: Chat about paper contents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                paperContent:
                  type: string
      responses:
        "200":
          description: Chat response received
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply:
                    type: string
        "500":
          description: Error in chat
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/chat/history:
    get:
      tags: [Chat]
      summary: Get chat history
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Chat history retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatMessage"
        "404":
          description: No chat history found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/auth/login:
    post:
      tags: [Auth]
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/auth/logout:
    post:
      tags: [Auth]
      summary: User logout
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: GEMINI_API_KEY
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        success:
          type: boolean
          description: Operation success status
        message:
          type: string
          description: Detailed error message

    PaperInfo:
      type: object
      properties:
        success:
          type: boolean
        paper:
          type: object
          properties:
            title:
              type: string
            authors:
              type: array
              items:
                type: string
            year:
              type: string
            doi:
              type: string
            abstract:
              type: string
            research_field:
              type: object
              properties:
                field:
                  type: string
                confidence:
                  type: number
            is_retracted:
              type: boolean
            retraction_info:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  doi:
                    type: string
            citation:
              type: string

    ChatMessage:
      type: object
      properties:
        type:
          type: string
          enum: [user, bot]
          description: Type of message sender
        text:
          type: string
          description: Message content

    UserProfile:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        user:
          $ref: "#/components/schemas/UserProfile"

    SearchResult:
      type: object
      properties:
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        year:
          type: string
        doi:
          type: string
        abstract:
          type: string
        source:
          type: string
          enum: [arxiv, semantic-scholar, crossref]
        url:
          type: string

    BookInfo:
      type: object
      properties:
        title:
          type: string
        authors:
          type: array
          items:
            type: string
        publisher:
          type: string
        publishDate:
          type: string
        isbn:
          type: string
        edition:
          type: string
        language:
          type: string
        pageCount:
          type: integer

    RetractionInfo:
      type: object
      properties:
        is_retracted:
          type: boolean
        retraction_date:
          type: string
          format: date
        retraction_reason:
          type: string
        retraction_source:
          type: string
        retraction_doi:
          type: string

security:
  - bearerAuth: []
  - apiKeyAuth: []
